name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: |
        cd frontend && npm install
        cd ../backend && npm install
        
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm run test
        
    - name: Run Backend Tests
      run: |
        cd backend
        npm run test

    - name: Run Linting
      run: |
        cd frontend && npm run lint
        cd ../backend && npm run lint

  security:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/autolaunch-frontend:latest
        
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/autolaunch-backend:latest

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        # This step would typically include:
        # - Connecting to your deployment environment
        # - Pulling new Docker images
        # - Running docker-compose up or kubernetes deployment
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}